/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/draggable/options.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","./helper","ui/widgets/draggable","ui/widgets/droppable","ui/widgets/sortable"],function(i,g,p){var e,t,c;i.module("draggable: options"),i.test("{ appendTo: 'parent' }, default, no clone",function(e){e.expect(4);var t=g("#draggable2").draggable({appendTo:"parent"});p.shouldMove(e,t,"absolute appendTo: parent"),t=g("#draggable1").draggable({appendTo:"parent"}),p.shouldMove(e,t,"relative appendTo: parent")}),i.test("{ appendTo: Element }, no clone",function(e){e.expect(4);var t=g("#draggable2").draggable({appendTo:g("#draggable2").parent()[0]});p.shouldMove(e,t,"absolute appendTo: Element"),t=g("#draggable1").draggable({appendTo:g("#draggable2").parent()[0]}),p.shouldMove(e,t,"relative appendTo: Element")}),i.test("{ appendTo: Selector }, no clone",function(e){e.expect(4);var t=g("#draggable2").draggable({appendTo:"#main"});p.shouldMove(e,t,"absolute appendTo: Selector"),t=g("#draggable1").draggable({appendTo:"#main"}),p.shouldMove(e,t,"relative appendTo: Selector")}),i.test("{ appendTo: 'parent' }, default",function(e){e.expect(2);var t=g("#draggable1").draggable();p.trackAppendedParent(t),e.equal(t.draggable("option","appendTo"),"parent"),p.move(t,1,1),e.equal(t.data("last_dragged_parent"),g("#main")[0])}),i.test("{ appendTo: Element }",function(e){e.expect(1);var t=g("#draggable2").parent()[0],a=g("#draggable1").draggable({appendTo:t});p.trackAppendedParent(a),p.move(a,1,1),e.equal(a.data("last_dragged_parent"),t)}),i.test("{ appendTo: jQuery }",function(e){e.expect(1);var t=g("#draggable2").parent(),a=g("#draggable1").draggable({appendTo:t});p.trackAppendedParent(a),p.move(a,1,1),e.equal(a.data("last_dragged_parent"),t[0])}),i.test("{ appendTo: Selector }",function(e){e.expect(1);var t="#main",a=g("#draggable1").draggable({appendTo:t});p.trackAppendedParent(a),p.move(a,1,1),e.equal(a.data("last_dragged_parent"),g(t)[0])}),i.test("appendTo, default, switching after initialization",function(e){e.expect(2);var t=g("#draggable1").draggable({helper:"clone"});p.trackAppendedParent(t),p.move(t,1,1),e.equal(t.data("last_dragged_parent"),g("#main")[0]),t.draggable("option","appendTo",g("#qunit-fixture")),p.move(t,2,2),e.equal(t.data("last_dragged_parent"),g("#qunit-fixture")[0])}),i.test("{ axis: false }, default",function(e){e.expect(2);var t=g("#draggable2").draggable({axis:!1});p.shouldMove(e,t,"axis: false")}),i.test("{ axis: 'x' }",function(e){e.expect(2);var t=g("#draggable2").draggable({axis:"x"});p.testDrag(e,t,t,50,50,50,0,"axis: x")}),i.test("{ axis: 'y' }",function(e){e.expect(2);var t=g("#draggable2").draggable({axis:"y"});p.testDrag(e,t,t,50,50,0,50,"axis: y")}),i.test("{ axis: ? }, unexpected",function(a){var o,e={true:!0,"{}":{},"[]":[],null:null,undefined:void 0,"function() {}":function(){}};a.expect(12),g.each(e,function(e,t){o=g("#draggable2").draggable({axis:t}),p.shouldMove(a,o,"axis: "+e),o.draggable("destroy")})}),i.test("axis, default, switching after initialization",function(e){e.expect(6);var t=g("#draggable1").draggable({axis:!1});p.shouldMove(e,t,"axis: default"),t.draggable("option","axis","x"),p.testDrag(e,t,t,50,50,50,0,"axis: x as option"),t.draggable("option","axis","y"),p.testDrag(e,t,t,50,50,0,50,"axis: y as option")}),i.test("{ cancel: 'input,textarea,button,select,option' }, default",function(e){e.expect(4),g("<div id='draggable-option-cancel-default'><input type='text'></div>").appendTo("#qunit-fixture");var t=g("#draggable-option-cancel-default").draggable({cancel:"input,textarea,button,select,option"});p.shouldMove(e,t,"cancel: default, element dragged"),t.draggable("destroy"),t=g("#draggable-option-cancel-default").draggable({cancel:"input,textarea,button,select,option"}),p.shouldNotDrag(e,t,"cancel: default, input dragged","#draggable-option-cancel-default input"),t.draggable("destroy")}),i.test("{ cancel: 'span' }",function(e){e.expect(4);var t=g("#draggable2").draggable();p.shouldMove(e,t,"cancel: default, span dragged","#draggable2 span"),t.draggable("destroy"),t=g("#draggable2").draggable({cancel:"span"}),p.shouldNotDrag(e,t,"cancel: span, span dragged","#draggable2 span")}),i.test("{ cancel: ? }, unexpected",function(a){a.expect(12);var o,e={true:!0,false:!1,"{}":{},"[]":[],null:null,undefined:void 0};g.each(e,function(e,t){o=g("#draggable2").draggable({cancel:t}),p.shouldMove(a,o,"cancel: "+e),o.draggable("destroy")})}),i.test("cancelement, default, switching after initialization",function(e){e.expect(6),g("<div id='draggable-option-cancel-default'><input type='text'></div>").appendTo("#qunit-fixture");var t=g("#draggable-option-cancel-default input"),a=g("#draggable-option-cancel-default").draggable();p.shouldNotDrag(e,a,"cancel: default, input dragged",t),a.draggable("option","cancel","textarea"),p.shouldMove(e,a,"cancel: textarea, input dragged",t),a.draggable("option","cancel","input"),p.shouldNotDrag(e,a,"cancel: input, input dragged",t)}),i.test("connectToSortable, dragging out of a sortable",function(a){a.expect(4);var o,r,e=g("#draggableSortable").draggable({scroll:!1,connectToSortable:"#sortable"}),n=g("#sortable").sortable({revert:100}),t=e.offset(),l={left:t.left+50,top:t.top+50};g(n).one("sortstart",function(e,t){o=t.item}),g(e).one("drag",function(e,t){r=t.helper}),g(e).one("dragstop",function(e,t){a.deepEqual(t.helper.offset(),l,"draggable offset is correct"),a.equal(o[0],r[0],"both have the same helper"),a.equal(o.attr("id"),r.attr("id"),"both have the same id"),a.equal(n.sortable("option","revert"),100,"sortable revert behavior is preserved")}),e.simulate("drag",{dx:50,dy:50})}),i.test("connectToSortable, dragging clone into sortable",function(a){var o=a.async();a.expect(3);var r,e=g("#draggableSortableClone").draggable({scroll:!1,connectToSortable:"#sortable",helper:"clone"}),t=g("#sortable").sortable({revert:100}),n=t.offset();g(t).one("sort",function(e,t){r=t.placeholder.offset(),a.deepEqual(t.helper.offset(),n,"sortable offset is correct"),a.notDeepEqual(t.helper.offset(),r,"offset not equal to placeholder")}),g(t).one("sortstop",function(e,t){a.deepEqual(t.item.offset(),r,"offset eventually equals placeholder"),o()}),e.simulate("drag",{x:n.left+1,y:n.top+1,moves:1})}),i.test("connectToSortable, dragging multiple elements in and out of sortable",function(a){a.expect(1);var e=g("#draggableSortableClone").draggable({scroll:!1,connectToSortable:"#sortable",helper:"clone"}),t=g("#draggableSortable").draggable({scroll:!1,connectToSortable:"#sortable"}),o=g("#sortable").sortable({revert:!1}),r=o.offset();e.simulate("drag",{x:r.left+1,y:r.top+1,moves:10}),t.simulate("drag",{dx:200,dy:200,moves:10}),o.one("sortstop",function(e,t){a.ok(!g.contains(document,t.placeholder[0]),"placeholder was removed")}),g("#sortable .sortable2Item").simulate("drag",{dx:200,dy:200,moves:10})}),i.test("connectToSortable, dragging through one sortable to a second",function(e){e.expect(2);var t=0,a=g("#draggableSortable").draggable({scroll:!1,connectToSortable:".sortable"}),o=g("#sortable").sortable({revert:!1}),r=g("#sortable2").sortable({revert:!1}),n=r.offset(),l={x:n.left+25,y:n.top+o.outerHeight()+200,moves:10};g(o).one("sortover",function(){t++,r.css("top","+=200")}),g(r).on("sortupdate",function(){e.ok(!0,"second sortable is updated")}),g(r).one("sortover",function(){t++}),g(r).one("sortstop",function(){e.equal(t,2,"went over both sortables")}),a.simulate("drag",l)}),i.test("connectToSortable, dragging through a sortable",function(e){e.expect(1);var t=g("#draggableSortable").draggable({scroll:!1,connectToSortable:"#sortable2"}),a=g("#sortable2").sortable(),o=a.offset();t.one("dragstop",function(){e.equal(t.parent().attr("id"),"sortable","restored draggable to original parent")}),t.simulate("drag",{x:o.left+25,y:o.top+a.outerHeight()+400,moves:20})}),i.test("{ containment: Element }",function(e){e.expect(1);var t,a=g("#draggable1").draggable({containment:g("#draggable1").parent()[0]}),o=a.parent(),r=o.offset(),n={left:r.left+p.border(o,"left")+p.margin(a,"left"),top:r.top+p.border(o,"top")+p.margin(a,"top")};a.simulate("drag",{dx:-100,dy:-100}),t=a.offset(),e.deepEqual(t,n,"compare offset to parent")}),i.test("{ containment: Selector }",function(e){e.expect(1);var t,a=g("#draggable1").draggable({containment:g("#qunit-fixture")}),o=a.parent(),r=o.offset(),n={left:r.left+p.border(o,"left")+p.margin(a,"left"),top:r.top+p.border(o,"top")+p.margin(a,"top")};a.simulate("drag",{dx:-100,dy:-100}),t=a.offset(),e.deepEqual(t,n,"compare offset to parent")}),i.test("{ containment: [x1, y1, x2, y2] }",function(e){e.expect(2);var t=g("#draggable1").draggable(),a=t.offset();t.draggable("option","containment",[a.left,a.top,a.left+t.width()+5,a.top+t.height()+5]),p.testDrag(e,t,t,-100,-100,0,0,"containment: [x1, y1, x2, y2]")}),i.test("{ containment: 'parent' }, relative",function(e){e.expect(1);var t,a=g("#draggable1").draggable({containment:"parent"}),o=a.parent(),r=o.offset(),n={left:r.left+p.border(o,"left")+p.margin(a,"left"),top:r.top+p.border(o,"top")+p.margin(a,"top")};a.simulate("drag",{dx:-100,dy:-100}),t=a.offset(),e.deepEqual(t,n,"compare offset to parent")}),i.test("{ containment: 'parent' }, absolute",function(e){e.expect(1);var t,a=g("#draggable2").draggable({containment:"parent"}),o=a.parent(),r=o.offset(),n={left:r.left+p.border(o,"left")+p.margin(a,"left"),top:r.top+p.border(o,"top")+p.margin(a,"top")};a.simulate("drag",{dx:-100,dy:-100}),t=a.offset(),e.deepEqual(t,n,"compare offset to parent")}),i.test("containment, account for border",function(e){e.expect(2);var t=g("#draggable1").appendTo("#scrollParent"),a=t.parent().css({height:"100px",width:"100px",borderStyle:"solid",borderWidth:"5px 10px 15px 20px"}),o=a.offset().top+a.outerHeight(),r=a.offset().left+a.outerWidth(),n=p.border(a,"bottom"),l=p.border(a,"right");t.css({height:"5px",width:"5px"}).draggable({containment:"parent",scroll:!1}),t.simulate("drag",{dx:100,dy:100}),e.close(t.offset().top,o-n-t.height(),1,"The draggable should be on top of its parent's bottom border"),e.close(t.offset().left,r-l-t.width(),1,"The draggable should be to the right of its parent's right border")}),i.test("containment, element cant be pulled out of container",function(e){e.expect(1);var t,a=g("<div>").css({width:200,height:200}).appendTo("#qunit-fixture"),o=g("#draggable1").appendTo(a);o.css({height:"5px",width:"5px"}).draggable({containment:"parent"}).simulate("drag",{dx:500,dy:500}),t=o.offset(),o.simulate("drag",{dx:200,dy:200}),e.deepEqual(o.offset(),t,"The draggable should not move past bottom right edge")}),i.test("containment, default, switching after initialization",function(e){e.expect(8);var t=g("#draggable1").draggable({containment:!1,scroll:!1}),a=t.parent().offset(),o=[a.left-100,a.top-100,a.left+500,a.top+500];p.testDrag(e,t,t,-100,-100,-100,-100,"containment: default"),t.draggable("option","containment","parent").css({top:0,left:0}),p.testDrag(e,t,t,-100,-100,0,0,"containment: parent as option"),t.draggable("option","containment",o).css({top:0,left:0}),p.testDrag(e,t,t,-100,-100,-100,-100,"containment: array as option"),t.draggable("option","containment",!1),p.testDrag(e,t,t,-100,-100,-100,-100,"containment: false as option")}),i.test("{ cursor: 'auto' }, default",function(e){function t(){return g("#draggable2").css("cursor")}e.expect(2);var a,o,r="auto",n=g("#draggable2").draggable({cursor:r,start:function(){a=t()}}),l=t();n.simulate("drag",{dx:-1,dy:-1}),o=t(),e.equal(a,r,"start callback: cursor 'auto'"),e.equal(o,l,"after drag: cursor restored")}),i.test("{ cursor: 'move' }",function(e){function t(){return g("body").css("cursor")}e.expect(2);var a,o,r="move",n=g("#draggable2").draggable({cursor:r,start:function(){a=t()}}),l=t();n.simulate("drag",{dx:-1,dy:-1}),o=t(),e.equal(a,r,"start callback: cursor 'move'"),e.equal(o,l,"after drag: cursor restored")}),i.test("#6889: Cursor doesn't revert to pre-dragging state after revert action when original element is removed",function(e){function t(){return g("body").css("cursor")}e.expect(2);var a=g("#draggable1").wrap("<div id='wrapper' />").draggable({cursor:"move",revert:!0,revertDuration:0,start:function(){e.notEqual(t(),o,"start callback: cursor '"+o+"'"),g("#wrapper").remove()},stop:function(){e.equal(t(),o,"after drag: cursor restored")}}),o=t();p.unreliableContains?(e.ok(!0,"Opera <12.14 and Safari <6.0 report wrong values for $.contains in jQuery < 1.8"),e.ok(!0,"Opera <12.14 and Safari <6.0 report wrong values for $.contains in jQuery < 1.8")):a.simulate("drag",{dx:-1,dy:-1})}),i.test("cursor, default, switching after initialization",function(e){e.expect(3);var t=g("#draggable1").draggable();p.trackMouseCss(t),p.move(t,1,1),e.equal(t.data("last_dragged_cursor"),"auto"),t.draggable("option","cursor","move"),p.move(t,1,1),e.equal(t.data("last_dragged_cursor"),"move"),t.draggable("option","cursor","ns-resize"),p.move(t,1,1),e.equal(t.data("last_dragged_cursor"),"ns-resize")}),i.test("cursorAt",function(n){n.expect(24);g.each({false:{cursorAt:!1},"{ left: -5, top: -5 }":{x:-5,y:-5,cursorAt:{left:-5,top:-5}},"[ 10, 20 ]":{x:10,y:20,cursorAt:[10,20]},"'10 20'":{x:10,y:20,cursorAt:"10 20"},"{ left: 20, top: 40 }":{x:20,y:40,cursorAt:{left:20,top:40}},"{ right: 10, bottom: 20 }":{x:10,y:20,cursorAt:{right:10,bottom:20}}},function(o,r){g.each(["relative","absolute"],function(e,a){g("#draggable"+(e+1)).draggable({cursorAt:r.cursorAt,drag:function(e,t){r.cursorAt?r.cursorAt.right?(n.equal(t.helper.width()-(e.clientX-t.offset.left),r.x-p.unreliableOffset,o+" "+a+" left"),n.equal(t.helper.height()-(e.clientY-t.offset.top),r.y-p.unreliableOffset,o+" "+a+" top")):(n.equal(e.clientX-t.offset.left,r.x+p.unreliableOffset,o+" "+a+" left"),n.equal(e.clientY-t.offset.top,r.y+p.unreliableOffset,o+" "+a+" top")):(n.equal(t.position.left-t.originalPosition.left,-3,o+" "+a+" left"),n.equal(t.position.top-t.originalPosition.top,-3,o+" "+a+" top"))}}).simulate("drag",{moves:1,dx:-3,dy:-3})})})}),i.test("cursorAt, switching after initialization",function(n){n.expect(24);g.each({false:{cursorAt:!1},"{ left: -5, top: -5 }":{x:-5,y:-5,cursorAt:{left:-5,top:-5}},"[ 10, 20 ]":{x:10,y:20,cursorAt:[10,20]},"'10 20'":{x:10,y:20,cursorAt:"10 20"},"{ left: 20, top: 40 }":{x:20,y:40,cursorAt:{left:20,top:40}},"{ right: 10, bottom: 20 }":{x:10,y:20,cursorAt:{right:10,bottom:20}}},function(o,r){g.each(["relative","absolute"],function(e,a){var t=g("#draggable"+(e+1));t.draggable({drag:function(e,t){r.cursorAt?r.cursorAt.right?(n.equal(t.helper.width()-(e.clientX-t.offset.left),r.x-p.unreliableOffset,o+" "+a+" left"),n.equal(t.helper.height()-(e.clientY-t.offset.top),r.y-p.unreliableOffset,o+" "+a+" top")):(n.equal(e.clientX-t.offset.left,r.x+p.unreliableOffset,o+" "+a+" left"),n.equal(e.clientY-t.offset.top,r.y+p.unreliableOffset,o+" "+a+" top")):(n.equal(t.position.left-t.originalPosition.left,-3,o+" "+a+" left"),n.equal(t.position.top-t.originalPosition.top,-3,o+" "+a+" top"))}}),t.draggable("option","cursorAt",!1),t.draggable("option","cursorAt",r.cursorAt),t.simulate("drag",{moves:1,dx:-3,dy:-3})})})}),i.test("disabled",function(e){e.expect(6);var t=g("#draggable1").draggable();p.shouldMove(e,t,"disabled: default"),t.draggable("option","disabled",!0),p.shouldNotDrag(e,t,"option: disabled true"),t.draggable("option","disabled",!1),p.shouldMove(e,t,"option: disabled false")}),i.test("{ grid: [50, 50] }, relative",function(e){e.expect(4);var t=g("#draggable1").draggable({grid:[50,50]});p.testDrag(e,t,t,24,24,0,0,"grid: [50, 50] relative"),p.testDrag(e,t,t,26,25,50,50,"grid: [50, 50] relative")}),i.test("{ grid: [50, 50] }, absolute",function(e){e.expect(4);var t=g("#draggable2").draggable({grid:[50,50]});p.testDrag(e,t,t,24,24,0,0,"grid: [50, 50] absolute"),p.testDrag(e,t,t,26,25,50,50,"grid: [50, 50] absolute")}),i.test("grid, switching after initialization",function(e){e.expect(8);var t=g("#draggable1").draggable();p.testDrag(e,t,t,24,24,24,24,"grid: default"),p.testDrag(e,t,t,0,0,0,0,"grid: default"),t.draggable("option","grid",[50,50]),p.testDrag(e,t,t,24,24,0,0,"grid: [50, 50] as option"),p.testDrag(e,t,t,26,25,50,50,"grid: [50, 50] as option")}),i.test("{ handle: 'span' }",function(e){e.expect(6);var t=g("#draggable2").draggable({handle:"span"});p.shouldMove(e,t,"handle: span","#draggable2 span"),p.shouldMove(e,t,"handle: span child","#draggable2 span em"),p.shouldNotDrag(e,t,"handle: span element")}),i.test("handle, default, switching after initialization",function(e){e.expect(12);var t=g("#draggable2").draggable();p.shouldMove(e,t,"handle: default, element dragged"),p.shouldMove(e,t,"handle: default, span dragged","#draggable2 span"),t.draggable("option","handle","span"),p.shouldNotDrag(e,t,"handle: span as option, element dragged"),p.shouldMove(e,t,"handle: span as option, span dragged","#draggable2 span"),t.draggable("option","handle",!1),p.shouldMove(e,t,"handle: false as option, element dragged"),p.shouldMove(e,t,"handle: false as option, span dragged","#draggable2 span")}),i.test("helper, default, switching after initialization",function(e){e.expect(6);var t=g("#draggable1").draggable();p.shouldMove(e,t,"helper: default"),t.draggable("option","helper","clone"),p.shouldMove(e,t,"helper: clone"),t.draggable("option","helper","original"),p.shouldMove(e,t,"helper: original")}),i.test("helper, function returning original element",function(e){e.expect(1);var t=g("#draggable1").css("position","static").draggable({helper:function(){return this}});p.testDragHelperOffset(e,t,100,100,100,100,"original element is draggable"),t.simulate("drag",{dx:100,dy:100})}),e={"no elements":[],parent:["#main"],root:[document],"parent and root":["#main",document],grandparent:["#scrollParent"]},t=["absolute","fixed","relative","static"],c=["relative","absolute","fixed"],g.each(["original","clone"],function(){var d=this;g.each(t,function(){var o=this;g.each(e,function(e,t){var r,n,l,s,a;r=c,n=o,l=d,s=t,a=e,i.test("{ helper: '"+l+"' }, "+n+", with scroll offset on "+a,function(e){e.expect(2*r.length);var t,a,o=g("#draggable1").css({position:n,top:0,left:0}).draggable({helper:l,scroll:!1});for(1===s.length&&"#scrollParent"===s[0]&&(p.setScrollable("#main",!1),p.setScrollable("#scrollParent",!0)),a=0;a<r.length;a++){for(t=0;t<s.length;t++)p.setScroll(s[t]);for(p.testScroll(e,o,r[a]),t=0;t<s.length;t++)p.restoreScroll(s[t])}1===s.length&&"#scrollParent"===s[1]&&(p.setScrollable("#main",!0),p.setScrollable("#scrollParent",!1))})})})}),i.test("{ opacity: 0.5 }",function(e){e.expect(1);var t=null;g("#draggable2").draggable({opacity:.5,start:function(){t=g(this).css("opacity")}}).simulate("drag",{dx:-1,dy:-1}),e.equal(t,.5,"start callback: opacity is")}),i.test("opacity, default, switching after initialization",function(e){e.expect(3);var t=null,a=g("#draggable2").draggable({start:function(){t=g(this).css("opacity")}});p.move(a,1,1),e.equal(t,1),a.draggable("option","opacity",.5),p.move(a,2,1),e.equal(t,.5),a.draggable("option","opacity",!1),p.move(a,3,1),e.equal(t,1)}),i.test("revert and revertDuration",function(e){var t=e.async();e.expect(7);var a=g("#draggable2").draggable({revert:!0,revertDuration:0});p.shouldMovePositionButNotOffset(e,a,"revert: true, revertDuration: 0 should revert immediately"),g("#draggable2").draggable("option","revert","invalid"),p.shouldMovePositionButNotOffset(e,a,"revert: invalid, revertDuration: 0 should revert immediately"),g("#draggable2").draggable("option","revert",!1),p.shouldMove(e,a,"revert: false should allow movement"),g("#draggable2").draggable("option",{revert:!0,revertDuration:200,stop:function(){t()}}),p.move(a,50,50),setTimeout(function(){e.ok(g("#draggable2").is(":animated"),"revert: true with revertDuration should animate")})}),i.test("revert: valid",function(e){e.expect(2);var t=g("#draggable2").draggable({revert:"valid",revertDuration:0});g("#droppable").droppable(),p.shouldMovePositionButNotOffset(e,t,"revert: valid reverts when dropped on a droppable")}),i.test("scope",function(e){e.expect(4);var t=g("#draggable2").draggable({scope:"tasks",revert:"valid",revertDuration:0});g("#droppable").droppable({scope:"tasks"}),p.shouldMovePositionButNotOffset(e,t,"revert: valid reverts when dropped on a droppable in scope"),g("#droppable").droppable("destroy").droppable({scope:"nottasks"}),p.shouldMove(e,t,"revert: valid reverts when dropped on a droppable out of scope")}),i.test("scroll, scrollSensitivity, and scrollSpeed",function(e){e.expect(2),p.setScrollable("#main",!1);var t,a=g(window).height(),o=g("#draggable1").draggable({scroll:!0}).appendTo("#qunit-fixture"),r=o.draggable("option","scrollSensitivity"),n=o.draggable("option","scrollSpeed");o.offset({top:a-r-1,left:1}),g(o).one("drag",function(){e.equal(g(window).scrollTop(),0,"scroll: true doesn't scroll when the element is dragged outside of scrollSensitivity")}),o.simulate("drag",{dx:1,y:a-r-1,moves:1}),o.draggable("option","scrollSensitivity",r+10),o.offset({top:a-r-1,left:1}),t=g(window).scrollTop(),g(o).one("drag",function(){e.ok(g(window).scrollTop()-t,n,"scroll: true scrolls when the element is dragged within scrollSensitivity")}),o.simulate("drag",{dx:1,y:a-r-1,moves:1}),p.restoreScroll(document)}),i.test("scroll ignores containers that are overflow: hidden",function(e){e.expect(2);var t=g("#scrollParent"),a=g("#draggable1").draggable().appendTo(t);if(a.draggable("option","scroll",!1),a.simulate("drag",{dx:1300,dy:1300}),0<t.scrollTop())return e.ok(!0,"overflow:hidden container natively scrolls"),void e.ok(!0,"overflow:hidden container natively scrolls");a.css({top:0,left:0}).draggable("option","scroll",!0),a.simulate("drag",{dx:1300,dy:1300}),e.equal(t.scrollTop(),0,"container doesn't scroll vertically"),e.equal(t.scrollLeft(),0,"container doesn't scroll horizontally")}),i.test("#6817: auto scroll goes double distance when dragging",function(a){a.expect(2),p.restoreScroll(document);var o,e=g(window).height(),t=g("#draggable1").draggable({scroll:!0,stop:function(e,t){a.equal(t.offset.top,n,"offset of item matches pointer position after scroll"),a.close(t.offset.top-o.top,10,1,"offset of item only moves expected distance after scroll")}}),r=e-t.draggable("option","scrollSensitivity"),n=r+10;t.offset({top:r,left:1}),o=t.offset(),t.simulate("drag",{handle:"corner",dx:1,y:n,moves:1}),p.restoreScroll(document)}),i.test("snap, snapMode, and snapTolerance",function(e){e.expect(10);var t,a,o=g("#draggable1").draggable({snap:!0,scroll:!1,snapMode:"both",snapTolerance:15}),r=g("#draggable2").draggable();o.css("margin","3px"),o.offset({top:1,left:1}),t=r.offset().left-o.outerWidth()-15-2,a=r.offset().top,o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.close(o.offset().left,t,1,"doesn't snap outside the snapTolerance"),e.close(o.offset().top,a,1,"doesn't snap outside the snapTolerance"),t+=3,o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.notDeepEqual(o.offset(),{top:a,left:t},"snaps inside the snapTolerance"),o.draggable("option","snap","#draggable2"),o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.notDeepEqual(o.offset(),{top:a,left:t},"snaps based on selector"),o.draggable("option","snap","#draggable3"),o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.deepEqual(o.offset(),{top:a,left:t},"doesn't snap based on invalid selector"),o.draggable("option","snap",!0),o.draggable("option","snapTolerance",13),o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.deepEqual(o.offset(),{top:a,left:t},"doesn't snap outside the modified snapTolerance"),o.draggable("option","snapTolerance",15),o.draggable("option","snapMode","inner"),o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.deepEqual(o.offset(),{top:a,left:t},"doesn't snap inside the outer snapTolerance area when snapMode is inner"),t=r.offset().left-15-1,a=r.offset().top,o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.deepEqual(o.offset(),{top:a,left:t},"doesn't snap inside the outer snapTolerance area when snapMode is inner"),t++,o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.notDeepEqual(o.offset(),{top:a,left:t},"snaps inside the inner snapTolerance area when snapMode is inner"),o.draggable("option","snapMode","outer"),o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),e.deepEqual(o.offset(),{top:a,left:t},"doesn't snap on the inner snapTolerance area when snapMode is outer")}),i.test("#8459: element can snap to an element that was removed during drag",function(e){e.expect(2);var t,a,o=g("#draggable1").draggable({snap:!0,scroll:!1,snapMode:"both",snapTolerance:15,start:function(){r.remove()}}),r=g("#draggable2").draggable();o.offset({top:1,left:1}),t=r.offset().left-o.outerWidth()-15+1,a=r.offset().top,o.simulate("drag",{handle:"corner",x:t,y:a,moves:1}),p.unreliableContains?(e.ok(!0,"Opera <12.14 and Safari <6.0 report wrong values for $.contains in jQuery < 1.8"),e.ok(!0,"Opera <12.14 and Safari <6.0 report wrong values for $.contains in jQuery < 1.8")):(e.close(o.offset().left,t,1,"doesn't snap to a removed element"),e.close(o.offset().top,a,1,"doesn't snap to a removed element"))}),i.test("#8165: Snapping large rectangles to small rectangles doesn't snap properly",function(e){e.expect(1);var t=g("#draggable1").css({width:"50px",height:"200px"}).offset({top:1,left:1}),a=g("#draggable2").css({width:"50px",height:"50px"}).offset({top:22,left:200}).offset().left-t.outerWidth()-20+1;g("#draggable1, #draggable2").draggable({snap:!0,snapTolerance:20}),t.simulate("drag",{handle:"corner",x:a,moves:1}),e.notDeepEqual(t.offset(),{top:1,left:a},"snaps even if only a side (not a corner) is inside the snapTolerance")}),i.test("stack",function(e){e.expect(2);var t=g("#draggable1").draggable({stack:"#draggable1, #draggable2"}),a=g("#draggable2").draggable({stack:"#draggable1, #draggable2"});p.move(t,1,1),e.equal(t.css("zIndex"),"2","stack increments zIndex correctly"),p.move(a,1,1),e.equal(a.css("zIndex"),"3","stack increments zIndex correctly")}),i.test("{ zIndex: 10 }",function(e){e.expect(1);var t;g("#draggable2").draggable({zIndex:10,start:function(){t=g(this).css("zIndex")}}).simulate("drag",{dx:-1,dy:-1}),e.equal(t,10,"start callback: zIndex is")}),i.test("zIndex, default, switching after initialization",function(e){e.expect(3);var t=null,a=g("#draggable2").draggable({start:function(){t=g(this).css("z-index")}});a.css("z-index",1),p.move(a,1,1),e.equal(t,1),a.draggable("option","zIndex",5),p.move(a,2,1),e.equal(t,5),a.draggable("option","zIndex",!1),p.move(a,3,1),e.equal(t,1)}),i.test("iframeFix",function(t){t.expect(5);var e=g("<div>").appendTo("#qunit-fixture").draggable({iframeFix:!0}),a=g("<div>").appendTo("#qunit-fixture").draggable({iframeFix:".iframe"}),o=g("<iframe>").appendTo(e);a.append("<iframe class='iframe'></iframe>").append("<iframe>"),o.css({width:1,height:1}),e.one("drag",function(){var e=g(this).children().not("iframe");t.equal(e.length,1,"blocking div added as sibling"),t.equal(e.outerWidth(),o.outerWidth(),"blocking div is wide enough"),t.equal(e.outerHeight(),o.outerHeight(),"blocking div is tall enough"),t.deepEqual(e.offset(),o.offset(),"blocking div is tall enough")}),e.simulate("drag",{dx:1,dy:1}),a.one("drag",function(){var e=g(this).children().not("iframe");t.equal(e.length,1,"blocking div added as sibling only to matching selector")}),a.simulate("drag",{dx:1,dy:1})})});
//# sourceMappingURL=/sm/a7e4e6610eb49cfaf9148316c975ad971b7a50dc34c695e45e9455b5b5d2b34d.map