/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/draggable/events.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/draggable"],function(t,e){var d;t.module("draggable: events",{beforeEach:function(){d=e("<div>").appendTo("#qunit-fixture")},afterEach:function(){d.draggable("destroy")}}),t.test("callbacks occurrence count",function(t){t.expect(3);var e=0,a=0,n=0;d.draggable({start:function(){e++},drag:function(){n++},stop:function(){a++}}),d.simulate("drag",{dx:10,dy:10}),t.equal(e,1,"start callback should happen exactly once"),t.equal(n,3,"drag callback should happen exactly once per mousemove"),t.equal(a,1,"stop callback should happen exactly once")}),t.test("stopping the start callback",function(t){t.expect(3);var e=0,a=0,n=0;d.draggable({start:function(){return e++,!1},drag:function(){n++},stop:function(){a++}}),d.simulate("drag",{dx:10,dy:10}),t.equal(e,1,"start callback should happen exactly once"),t.equal(n,0,"drag callback should not happen at all"),t.equal(a,0,"stop callback should not happen if there wasnt even a start")}),t.test("stopping the drag callback",function(t){t.expect(2);var e=0,a=0;d.draggable({start:function(){e++},drag:function(){return 0,!1},stop:function(){a++}}),d.simulate("drag",{dx:10,dy:10}),t.equal(e,1,"start callback should happen exactly once"),t.equal(a,1,"stop callback should happen, as we need to actively stop the drag")}),t.test("stopping the stop callback",function(t){t.expect(1),d.draggable({helper:"clone",stop:function(){return!1}}),d.simulate("drag",{dx:10,dy:10}),t.ok(d.draggable("instance").helper,"the clone should not be deleted if the stop callback is stopped")}),t.test("position and offset in hash is consistent between start, drag, and stop",function(t){var a,n,o,s,l,c;t.expect(4),(d=e("<div style='margin: 2px;'></div>").appendTo("#qunit-fixture")).draggable({start:function(t,e){a=e.position,n=e.offset},drag:function(t,e){o=e.position,s=e.offset},stop:function(t,e){l=e.position,c=e.offset}}),d.simulate("drag",{dx:10,dy:10,moves:1}),a.left+=10,a.top+=10,n.left+=10,n.top+=10,t.deepEqual(a,o,"start position equals drag position plus distance"),t.deepEqual(o,l,"drag position equals stop position"),t.deepEqual(n,s,"start offset equals drag offset plus distance"),t.deepEqual(s,c,"drag offset equals stop offset")})});
//# sourceMappingURL=/sm/d30a1f54066731c5e1c2416e59016f4de794ec64b94036a51d91f3530dbeebd7.map