/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/dialog/core.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/dialog"],function(e,g){e.module("dialog: core"),e.test("markup structure",function(e){e.expect(11);var t=g("<div>").dialog({buttons:[{text:"Ok",click:g.noop}]}),i=t.dialog("widget"),n=i.find(".ui-dialog-titlebar"),o=n.find(".ui-dialog-title"),a=n.find(".ui-dialog-titlebar-close"),d=i.find(".ui-dialog-buttonpane"),l=i.find(".ui-dialog-buttonset"),u=l.find(".ui-button");e.hasClasses(i,"ui-dialog ui-dialog-buttons ui-widget ui-widget-content"),e.hasClasses(n,"ui-dialog-titlebar ui-widget-header"),e.equal(n.length,1,"Dialog has exactly one titlebar"),e.hasClasses(a,"ui-dialog-titlebar-close ui-widget"),e.equal(a.length,1,"Titlebar has exactly one close button"),e.equal(o.length,1,"Titlebar has exactly one title"),e.hasClasses(t,"ui-dialog-content ui-widget-content"),e.hasClasses(d,"ui-dialog-buttonpane ui-widget-content"),e.equal(d.length,1,"Dialog has exactly one buttonpane"),e.equal(l.length,1,"Buttonpane has exactly one buttonset"),e.equal(u.length,1,"Buttonset contains exactly 1 button when created with 1")}),e.test("markup structure - no buttons",function(e){e.expect(7);var t=g("<div>").dialog(),i=t.dialog("widget"),n=i.find(".ui-dialog-titlebar"),o=n.find(".ui-dialog-title"),a=n.find(".ui-dialog-titlebar-close");e.hasClasses(i,"ui-dialog ui-widget ui-widget-content"),e.hasClasses(n,"ui-dialog-titlebar ui-widget-header"),e.equal(n.length,1,"Dialog has exactly one titlebar"),e.hasClasses(a,"ui-dialog-titlebar-close ui-widget"),e.equal(a.length,1,"Titlebar has exactly one close button"),e.equal(o.length,1,"Titlebar has exactly one title"),e.hasClasses(t,"ui-dialog-content ui-widget-content")}),e.test("title id",function(e){e.expect(1);var t,i=g("<div>").dialog();t=i.dialog("widget").find(".ui-dialog-title").attr("id"),e.ok(/ui-id-\d+$/.test(t),"auto-numbered title id"),i.remove()}),e.test("ARIA",function(e){e.expect(4);var t=g("<div>").dialog(),i=t.dialog("widget");e.equal(i.attr("role"),"dialog","dialog role"),e.equal(i.attr("aria-labelledby"),i.find(".ui-dialog-title").attr("id")),e.equal(i.attr("aria-describedby"),t.attr("id"),"aria-describedby added"),t.remove(),t=g("<div><div aria-describedby='section2'><p id='section2'>descriotion</p></div></div>").dialog(),e.equal(t.dialog("widget").attr("aria-describedby"),null,"no aria-describedby added, as already present in markup"),t.remove()}),e.test("widget method",function(e){e.expect(1);var t=g("<div>").appendTo("#qunit-fixture").dialog();e.deepEqual(t.parent()[0],t.dialog("widget")[0]),t.remove()}),e.test("focus tabbable",function(i){var e=i.async();i.expect(8);var o,t={buttons:[{text:"Ok",click:g.noop}]};function n(e,t,i,n){g("body").trigger("focus"),o=g(e).dialog(t),setTimeout(function(){i(function(){o.remove(),setTimeout(n)})})}function a(){n("<div><input><input autofocus></div>",t,function(e){i.equal(document.activeElement,o.find("input")[1],"2. first element inside the dialog matching [autofocus]"),e()},d)}function d(){n("<div><input><input></div>",t,function(e){i.equal(document.activeElement,o.find("input")[0],"3. tabbable element inside the content element"),e()},l)}function l(){n("<div>text</div>",t,function(e){i.equal(document.activeElement,o.dialog("widget").find(".ui-dialog-buttonpane button")[0],"4. tabbable element inside the buttonpane"),e()},u)}function u(){n("<div>text</div>",{},function(e){i.equal(document.activeElement,o.dialog("widget").find(".ui-dialog-titlebar .ui-dialog-titlebar-close")[0],"5. the close button"),e()},s)}function s(){n("<div>text</div>",{autoOpen:!1},function(e){o.dialog("widget").find(".ui-dialog-titlebar-close").hide(),o.dialog("open"),setTimeout(function(){i.equal(document.activeElement,o.parent()[0],"6. the dialog itself"),e()})},c)}function c(){n("<div><input><input autofocus></div>",{open:function(){var t=g(this).find("input");t.last().on("keydown",function(e){e.preventDefault(),t.first().trigger("focus")})}},function(e){var t=o.find("input");i.equal(document.activeElement,t[1],"Focus starts on second input"),t.last().simulate("keydown",{keyCode:g.ui.keyCode.TAB}),setTimeout(function(){i.equal(document.activeElement,t[0],"Honor preventDefault, allowing custom focus management"),e()},50)},e)}n("<div><input><input></div>",t,function(e){var t=o.find("input:last").trigger("focus").trigger("blur");o.dialog("instance")._focusTabbable(),setTimeout(function(){i.equal(document.activeElement,t[0],"1. an element that was focused previously."),e()})},a)}),e.test("#7960: resizable handles below modal overlays",function(e){e.expect(1);var t=g("<div>").resizable(),i=g("<div>").dialog({modal:!0}),n=parseInt(t.find(".ui-resizable-handle").css("zIndex"),10),o=parseInt(g(".ui-widget-overlay").css("zIndex"),10);e.ok(n<o,"Resizable handles have lower z-index than modal overlay"),i.dialog("destroy")}),e.test("Prevent tabbing out of dialogs",function(e){var t=e.async();e.expect(3);var i=g("<div><input name='0'><input name='1'></div>").dialog(),n=i.find("input");function o(){e.equal(document.activeElement,n[0],"Tab key event move d focus  within the modal"),g(document.activeElement).simulate("keydown",{keyCode:g.ui.keyCode.TAB,shiftKey:!0}),setTimeout(a)}function a(){e.equal(document.activeElement,n[1],"Shift-Tab key event moved focus back to second input"),i.remove(),setTimeout(t)}i.dialog("widget").find(".ui-button").remove(),n[1].focus(),setTimeout(function(){e.equal(document.activeElement,n[1],"Focus set on second input"),n.eq(1).simulate("keydown",{keyCode:g.ui.keyCode.TAB}),setTimeout(o)})}),e.test("#9048: multiple modal dialogs opened and closed in different order",function(e){var t=e.async();e.expect(1),g("#dialog1, #dialog2").dialog({autoOpen:!1,modal:!0}),g("#dialog1").dialog("open"),g("#dialog2").dialog("open"),g("#dialog1").dialog("close"),setTimeout(function(){g("#dialog2").dialog("close"),g("#favorite-animal").trigger("focus"),e.ok(!0,"event handlers cleaned up (no errors thrown)"),t()})}),e.test("interaction between overlay and other dialogs",function(e){var t=e.async();g.widget("ui.testWidget",g.ui.dialog,{options:{modal:!0,autoOpen:!1}}),e.expect(2);var i=g("<div><input id='input-1'></div>").dialog({modal:!0}),n=i.find("input"),o=g("<div><input id='input-2'></div>").testWidget(),a=o.find("input");g("body").trigger("focus"),setTimeout(function(){o.testWidget("open"),g("#favorite-animal").trigger("focus"),setTimeout(function(){e.equal(document.activeElement,a[0]),n.trigger("focus"),g("#favorite-animal").trigger("focus"),setTimeout(function(){e.equal(document.activeElement,n[0]),i.remove(),o.remove(),delete g.ui.testWidget,delete g.fn.testWidget,t()})})})})});
//# sourceMappingURL=/sm/8e1f438195e4f6cdcff86885e531b872c7c69a158803d2c53a5cc9fef897203c.map