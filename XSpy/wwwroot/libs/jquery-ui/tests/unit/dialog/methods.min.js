/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/dialog/methods.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/dialog"],function(e,d){e.module("dialog: methods",{afterEach:function(){d("body>.ui-dialog").remove()}}),e.test("init",function(e){e.expect(6),d("<div></div>").appendTo("body").dialog().remove(),e.ok(!0,".dialog() called on element"),d([]).dialog().remove(),e.ok(!0,".dialog() called on empty collection"),d("<div></div>").dialog().remove(),e.ok(!0,".dialog() called on disconnected DOMElement - never connected"),d("<div></div>").appendTo("body").remove().dialog().remove(),e.ok(!0,".dialog() called on disconnected DOMElement - removed");var o=d("<div></div>").dialog();o.dialog("option","foo"),o.remove(),e.ok(!0,"arbitrary option getter after init"),d("<div></div>").dialog().dialog("option","foo","bar").remove(),e.ok(!0,"arbitrary option setter after init")}),e.test("destroy",function(o){var e,i;o.expect(17),d("#dialog1, #form-dialog").hide(),o.domEqual("#dialog1",function(){var e=d("#dialog1").dialog().dialog("destroy");o.equal(e.parent()[0],d("#qunit-fixture")[0]),o.equal(e.index(),0)}),o.domEqual("#form-dialog",function(){var e=d("#form-dialog").dialog().dialog("destroy");o.equal(e.parent()[0],d("#qunit-fixture")[0]),o.equal(e.index(),2)}),d("#dialog1").show().css({width:"400px",minHeight:"100px",height:"200px"}),o.domEqual("#dialog1",function(){d("#dialog1").dialog().dialog("destroy")}),d("#dialog1").dialog({autoOpen:!1,modal:!0}).dialog("destroy"),o.equal(d(".ui-widget-overlay").length,0,"overlay does not exist"),o.equal(d(document).data("ui-dialog-overlays"),void 0,"ui-dialog-overlays equals the number of open overlays"),e=d("#dialog1").dialog({modal:!0}),i=d("#dialog2").dialog({modal:!0}),o.equal(d(".ui-widget-overlay").length,2,"overlays created when dialogs are open"),o.equal(d(document).data("ui-dialog-overlays"),2,"ui-dialog-overlays equals the number of open overlays"),e.dialog("close"),o.equal(d(".ui-widget-overlay").length,1,"overlay remains after closing one dialog"),o.equal(d(document).data("ui-dialog-overlays"),1,"ui-dialog-overlays equals the number of open overlays"),e.dialog("destroy"),o.equal(d(".ui-widget-overlay").length,1,"overlay remains after destroying one dialog"),o.equal(d(document).data("ui-dialog-overlays"),1,"ui-dialog-overlays equals the number of open overlays"),i.dialog("destroy"),o.equal(d(".ui-widget-overlay").length,0,"overlays removed when all dialogs are destoryed"),o.equal(d(document).data("ui-dialog-overlays"),void 0,"ui-dialog-overlays equals the number of open overlays")}),e.test("#9000: Dialog leaves broken event handler after close/destroy in certain cases",function(e){var o=e.async();e.expect(1),d("#dialog1").dialog({modal:!0}).dialog("close").dialog("destroy"),setTimeout(function(){d("#favorite-animal").trigger("focus"),e.ok(!0,"close and destroy modal dialog before its really opened"),o()})}),e.test("#4980: Destroy should place element back in original DOM position",function(e){e.expect(2);var o=d("<div id='container'><div id='modal'>Content</div></div>"),i=o.find("#modal");i.dialog(),e.ok(!d.contains(o[0],i[0]),"dialog should move modal element to outside container element"),i.dialog("destroy"),e.ok(d.contains(o[0],i[0]),"dialog(destroy) should place element back in original DOM position")}),e.test("enable/disable disabled",function(e){e.expect(3);var o=d("<div></div>").dialog();o.dialog("disable"),e.equal(o.dialog("option","disabled"),!1,"disable method doesn't do anything"),e.lacksClasses(o,"ui-dialog-disabled ui-state-disabled","disable method doesn't add classes"),e.ok(!o.dialog("widget").attr("aria-disabled"),"disable method doesn't add aria-disabled")}),e.test("close",function(e){e.expect(3);var o,i=d("<div></div>").dialog(),a=i.dialog("close");e.equal(a,i,"close is chainable"),o=d("<div></div>").dialog(),e.ok(o.dialog("widget").is(":visible")&&!o.dialog("widget").is(":hidden"),"dialog visible before close method called"),o.dialog("close"),e.ok(o.dialog("widget").is(":hidden")&&!o.dialog("widget").is(":visible"),"dialog hidden after close method called")}),e.test("isOpen",function(e){e.expect(4);var o=d("<div></div>").dialog();e.equal(o.dialog("isOpen"),!0,"dialog is open after init"),o.dialog("close"),e.equal(o.dialog("isOpen"),!1,"dialog is closed"),o.remove(),o=d("<div></div>").dialog({autoOpen:!1}),e.equal(o.dialog("isOpen"),!1,"dialog is closed after init"),o.dialog("open"),e.equal(o.dialog("isOpen"),!0,"dialog is open"),o.remove()}),e.test("moveToTop",function(o){function e(){var e=d(".ui-dialog").map(function(){return+d(this).css("z-index")}).get();o.deepEqual(e,d.makeArray(arguments))}o.expect(5);var i,a="dialog1";i=d("#dialog1").dialog({focus:function(){o.equal(a,"dialog1")}}),a="dialog2",d("#dialog2").dialog({focus:function(){o.equal(a,"dialog2")}}),e(100,101),a="dialog1",i.dialog("moveToTop"),e(102,101)}),e.test("moveToTop: content scroll stays intact",function(e){e.expect(2);var o=d("#dialog1").dialog(),i=d("#form-dialog").dialog({height:200});i.scrollTop(50),e.equal(i.scrollTop(),50),o.dialog("moveToTop"),e.equal(i.scrollTop(),50)}),e.test("open",function(e){e.expect(3);var o,i=d("<div></div>").dialog(),a=i.dialog("open");e.equal(a,i,"open is chainable"),o=d("<div></div>").dialog({autoOpen:!1}),e.ok(o.dialog("widget").is(":hidden")&&!o.dialog("widget").is(":visible"),"dialog hidden before open method called"),o.dialog("open"),e.ok(o.dialog("widget").is(":visible")&&!o.dialog("widget").is(":hidden"),"dialog visible after open method called")}),e.test("Ensure form elements don't reset when opening a dialog",function(e){e.expect(2);var o=d("<form><input type='radio' name='radio' id='a' value='a' checked='checked'></input><input type='radio' name='radio' id='b' value='b'>b</input></form>").appendTo("body").dialog({autoOpen:!1});o.find("#b").prop("checked",!0),e.equal(o.find("input:checked").val(),"b","checkbox b is checked"),o.dialog("open"),e.equal(o.find("input:checked").val(),"b","checkbox b is checked"),o.remove()}),e.test("#8958: dialog can be opened while opening",function(e){var o=e.async();e.expect(1);var i=d("<div>").dialog({autoOpen:!1,modal:!0,open:function(){e.equal(d(".ui-widget-overlay").length,1),o()}});d("body").trigger("focus"),d("#favorite-animal").on("focus",function(){i.dialog("open")}).on("blur",function(){i.dialog("open")}).trigger("focus")}),e.test("#5531: dialog width should be at least minWidth on creation",function(e){e.expect(4);var o=d("<div></div>").dialog({width:200,minWidth:300});e.equal(o.dialog("option","width"),300,"width is minWidth"),o.dialog("option","width",200),e.equal(o.dialog("option","width"),300,"width unchanged when set to < minWidth"),o.dialog("option","width",320),e.equal(o.dialog("option","width"),320,"width changed if set to > minWidth"),o.remove(),o=d("<div></div>").dialog({minWidth:300}),e.ok(300<=o.dialog("option","width"),"width is at least 300"),o.remove()})});
//# sourceMappingURL=/sm/280b5d977abaecee36bbb038b1942799467722bdc8c40377fab4c616f0327635.map