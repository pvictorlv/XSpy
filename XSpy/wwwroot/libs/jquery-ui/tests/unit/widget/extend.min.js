/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/widget/extend.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widget"],function(e,v){e.test("$.widget.extend()",function(e){e.expect(27);var t,o,n,r,d,i,u,x,a,s,l,c,f,m={xnumber1:5,xnumber2:7,xstring1:"peter",xstring2:"pan"},g={xnumber2:1,xstring2:"x",xxx:"newstring"},p={foo:{bar:!0}},b={foo:{baz:!0},foo2:document},w={baz:!0},q=(document,{bar:!0,baz:!0}),h=(document,[1,2,3]),k={arr:h},y={xnumber1:5,xnumber2:7,xstring1:"peter",xstring2:"pan"},E={xnumber2:1,xstring2:"x"},C={xstring2:"xx",xxx:"newstringx"};v.widget.extend(m,g),e.deepEqual(m,{xnumber1:5,xnumber2:1,xstring1:"peter",xstring2:"x",xxx:"newstring"},"Check if extended: settings must be extended"),e.deepEqual(g,{xnumber2:1,xstring2:"x",xxx:"newstring"},"Check if not modified: options must not be modified"),v.widget.extend(p,b),e.deepEqual(p.foo,q,"Check if foo: settings must be extended"),e.deepEqual(b.foo,w,"Check if not deep2: options must not be modified"),e.equal(p.foo2,document,"Make sure that a deep clone was not attempted on the document"),e.strictEqual(v.widget.extend({},k).arr,h,"Don't clone arrays"),e.ok(v.isPlainObject(v.widget.extend({arr:h},{arr:{}}).arr),"Cloned object heve to be an plain object"),o={},n={foo:{length:-1}},v.widget.extend(o,n),e.deepEqual(o.foo,n.foo,"The length property must copy correctly"),o={},r={foo:{date:new Date}},v.widget.extend(o,r),e.deepEqual(o.foo,r.foo,"Dates copy correctly"),u={foo:{date:i=new(d=function(){})}},o={},v.widget.extend(o,u),e.strictEqual(o.foo.date,i,"Custom objects copy correctly (no methods)"),d.prototype={someMethod:function(){}},o={},v.widget.extend(o,u),e.strictEqual(o.foo.date,i,"Custom objects copy correctly"),t=v.widget.extend({foo:4},{foo:Number(5)}),e.equal(t.foo,5,"Wrapped numbers copy correctly"),x=v.widget.extend({},g,{xnumber2:null}),e.strictEqual(x.xnumber2,null,"Check to make sure null values are copied"),x=v.widget.extend({},g,{xnumber2:void 0}),e.strictEqual(x.xnumber2,g.xnumber2,"Check to make sure undefined values are not copied"),x=v.widget.extend({},g,{xnumber0:null}),e.strictEqual(x.xnumber0,null,"Check to make sure null values are inserted"),s={foo:a={},bar:5},v.widget.extend(a,s),e.deepEqual(a,{foo:{},bar:5},"Check to make sure a recursive obj doesn't go never-ending loop by not copying it over"),t=v.widget.extend({foo:[]},{foo:[0]}),e.equal(t.foo.length,1,"Check to make sure a value with coersion 'false' copies over when necessary to fix #1907"),t=v.widget.extend({foo:"1,2,3"},{foo:[1,2,3]}),e.deepEqual(t.foo,[1,2,3],"Properly extend a string to array."),t=v.widget.extend({foo:"1,2,3"},{foo:{to:"object"}}),e.deepEqual(t.foo,{to:"object"},"Properly extend a string to object."),t=v.widget.extend({foo:"bar"},{foo:null}),e.strictEqual(t.foo,null,"Make sure a null value doesn't crash with deep extend, for #1908"),l={foo:null},v.widget.extend(l,{foo:"notnull"}),e.equal(l.foo,"notnull","Make sure a null value can be overwritten"),m=v.widget.extend({},y,E,C),e.deepEqual(m,{xnumber1:5,xnumber2:1,xstring1:"peter",xstring2:"xx",xxx:"newstringx"},"Check if extended: settings must be extended"),e.deepEqual(y,{xnumber1:5,xnumber2:7,xstring1:"peter",xstring2:"pan"},"Check if not modified: options1 must not be modified"),e.deepEqual(E,{xnumber2:1,xstring2:"x"},"Check if not modified: options1 must not be modified"),e.deepEqual(C,{xstring2:"xx",xxx:"newstringx"},"Check if not modified: options2 must not be modified"),c={key:[1,2,3]},f=v.widget.extend({},c),e.deepEqual(c,f,"don't clone arrays"),c.key[0]=10,e.deepEqual(c,f,"don't clone arrays")})});
//# sourceMappingURL=/sm/d96dfcbc0b68f375ce10bb269a2b14f9f3f819a4f8f231e8776da94246774512.map