/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/sortable/options.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/sortable"],function(e,o){e.module("sortable: options"),e.test("{ axis: false }, default",function(e){e.expect(2);var t,a=o("#sortable").sortable({axis:!1,change:function(){t=a.offset(),e.notEqual(t.left,l.left,"x axis not constrained when axis: false"),e.notEqual(t.top,l.top,"y axis not constrained when axis: false")}}).find("li").eq(0),l=a.offset();a.simulate("drag",{dx:50,dy:25,moves:1})}),e.test("{ axis: 'x' }",function(e){e.expect(2);var t,a=o("#sortable").sortable({axis:"x",change:function(){t=a.offset(),e.notEqual(t.left,l.left,"x axis not constrained when axis: x"),e.equal(t.top,l.top,"y axis constrained when axis: x")}}).find("li").eq(0),l=a.offset();a.simulate("drag",{dx:50,dy:25,moves:1})}),e.test("{ axis: 'y' }",function(e){e.expect(2);var t,a=o("#sortable").sortable({axis:"y",change:function(){t=a.offset(),e.equal(t.left,l.left,"x axis constrained when axis: y"),e.notEqual(t.top,l.top,"y axis not constrained when axis: y")}}).find("li").eq(0),l=a.offset();a.simulate("drag",{dx:50,dy:25,moves:1})}),e.test("#7415: Incorrect revert animation with axis: 'y'",function(t){var a=t.async();t.expect(2);var l,n=o("#sortable").sortable({axis:"y",revert:!0,sort:function(){l=n.css("left")}}).find("li").eq(0);n.simulate("drag",{dy:300,dx:50}),setTimeout(function(){var e=parseFloat(n.css("top"));t.equal(n.css("left"),l,"left not animated"),t.ok(0<e&&e<300,"top is animated"),a()},100)}),e.test("#8792: issues with floated items in connected lists",function(e){e.expect(2);var t,a=0;o("#qunit-fixture").html("<ul class='c'><li>a</li><li>a</li></ul><ul class='c'><li>a</li><li>a</li></ul>").find("ul").css({float:"left",width:"100px"}).end().find("li").css({float:"left",width:"50px",height:"50px"}),o("#qunit-fixture .c").sortable({connectWith:"#qunit-fixture .c",change:function(){a++}}),(t=o("#qunit-fixture li:eq(0)")).simulate("drag",{dx:55,moves:15}),e.equal(a,1,"change fired only once (no jitters) when dragging a floated sortable in it's own container"),t.simulate("drag",{dx:100,moves:15}),e.equal(a,3,"change fired once for each expected change when dragging a floated sortable to a connected container")}),e.test("#8301: single axis with connected list",function(e){e.expect(1);var t=o("#sortable").sortable({axis:"y",tolerance:"pointer",connectWith:".connected"});o("<ul class='connected'><li>Item 7</li><li>Item 8</li></ul>").sortable({axis:"y",tolerance:"pointer",connectWith:"#sortable",receive:function(){e.ok(!0,"connected list received item")}}).insertAfter(t),t.find("li").eq(0).simulate("drag",{handle:"corner",dy:120,moves:1})}),e.test("{ placeholder: false } img",function(a){a.expect(3),o("#sortable-images").sortable({start:function(e,t){a.ok(0<t.placeholder.attr("src").indexOf("images/jqueryui_32x32.png"),"placeholder img has correct src"),a.equal(t.placeholder.height(),32,"placeholder has correct height"),a.equal(t.placeholder.width(),32,"placeholder has correct width")}}).find("img").eq(0).simulate("drag",{dy:1})}),e.test("{ placeholder: String }",function(a){a.expect(1),o("#sortable").sortable({placeholder:"test",start:function(e,t){a.hasClasses(t.placeholder,"test")}}).find("li").eq(0).simulate("drag",{dy:1})}),e.test("{ placholder: String } tr",function(l){l.expect(4);var n,e=o("#sortable-table tbody").sortable({placeholder:"test",start:function(e,t){var a=s.children().map(function(){return o(this).width()}).get();l.hasClasses(t.placeholder,"test"),l.deepEqual(a,n,"table cells maintian size"),l.equal(t.placeholder.children().length,i.children().length,"placeholder has correct number of cells"),l.equal(t.placeholder.children().html(),o("<span>&#160;</span>").html(),"placeholder td has content for forced dimensions")}}).children("tr"),i=e.eq(0),s=e.eq(1);n=s.children().map(function(){return o(this).width()}).get(),i.simulate("drag",{dy:1})}),e.test("{ placholder: String } tbody",function(l){l.expect(6);var n,e=o("#sortable-table").sortable({placeholder:"test",start:function(e,t){var a=s.children().map(function(){return o(this).width()}).get();l.ok(t.placeholder.hasClass("test"),"placeholder has class"),l.deepEqual(a,n,"table cells maintain size"),l.equal(t.placeholder.children().length,1,"placeholder has one child"),l.equal(t.placeholder.children("tr").length,1,"placeholder's child is tr"),l.equal(t.placeholder.find("> tr").children().length,i.find("> tr:first").children().length,"placeholder's tr has correct number of cells"),l.equal(t.placeholder.find("> tr").children().html(),o("<span>&#160;</span>").html(),"placeholder td has content for forced dimensions")}}).children("tbody"),i=e.eq(0),s=e.eq(1);n=s.children().map(function(){return o(this).width()}).get(),i.simulate("drag",{dy:1})})});
//# sourceMappingURL=/sm/776990191ac6cf8f25f41c08241cdab76cf268f3ada63d30ab47c0b00fd920ca.map