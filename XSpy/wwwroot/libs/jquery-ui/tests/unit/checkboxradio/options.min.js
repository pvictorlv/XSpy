/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/checkboxradio/options.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/checkboxradio"],function(e,a){function t(e,o){o.hasClasses(e.checkboxradio("widget"),"ui-state-disabled","label gets ui-state-disabled"),o.strictEqual(e.is(":disabled"),!0,"checkbox is disabled")}function i(e,o){e.strictEqual(o.checkboxradio("widget").find("span.ui-icon").length,0,"Label does not contain an icon")}function c(e,o,i){var c=e.checkboxradio("widget").find(".ui-icon");o=o||"blank",i.strictEqual(c.length,1,"Label contains icon"),i.hasClasses(c,"ui-checkboxradio-icon ui-corner-all ui-icon ui-icon-background ui-icon-"+o,"Icon has proper classes"),"blank"===o&&i.lacksClasses(c,"ui-icon-check ui-state-checked")}e.module("Checkboxradio: options"),e.test("disabled",function(e){e.expect(6);var o,i,c=a("#checkbox-option-disabled");c.checkboxradio({disabled:!0}),t(c,e),c.checkboxradio("option","disabled",!1),o=c,(i=e).lacksClasses(o.checkboxradio("widget"),"ui-state-disabled","label has ui-state-disabled removed when disabled set to false"),i.strictEqual(o.is(":disabled"),!1,"checkbox has disabled prop removed when disabled set to false"),c.checkboxradio("option","disabled",!0),t(c,e)}),e.test("disabled - prop true on init",function(e){e.expect(2);var o=a("#checkbox-option-disabled");o.prop("disabled",!0),o.checkboxradio(),t(o,e)}),e.test("disabled - explicit null value, checks the DOM",function(e){e.expect(2);var o=a("#checkbox-option-disabled");o.prop("disabled",!0),o.checkboxradio({disabled:null}),t(o,e)}),e.test("icon - false on init",function(e){var o=a("#checkbox-option-icon");e.expect(1),o.checkboxradio({icon:!1}),i(e,o)}),e.test("icon - default unchecked",function(e){var o=a("#checkbox-option-icon");e.expect(3),o.checkboxradio(),c(o,!1,e)}),e.test("icon - default checked",function(e){var o=a("#checkbox-option-icon").attr("checked",!0);e.expect(2),o.checkboxradio(),c(o,"check ui-state-checked",e)}),e.test("icon",function(e){var o=a("#checkbox-option-icon");e.expect(9),o.prop("checked",!0),o.checkboxradio(),c(o,"check ui-state-checked",e),o.checkboxradio("option","icon",!1),i(e,o),o.checkboxradio("option","icon",!0),c(o,"check ui-state-checked",e),o.checkboxradio("option","icon",!1),i(e,o),o.checkboxradio("option","icon",!0),o.prop("checked",!1).checkboxradio("refresh"),c(o,!1,e)}),e.test("label - default",function(e){var o,i=a("#checkbox-option-label");e.expect(2),i.checkboxradio(),o=i.checkboxradio("widget"),e.strictEqual(i.checkboxradio("option","label"),"checkbox label","When no value passed on create text from dom is used for option"),e.strictEqual(a.trim(o.text()),"checkbox label","When no value passed on create text from dom is used in dom")}),e.test("label - explicit value",function(e){e.expect(5);var o=a("#checkbox-option-label").checkboxradio({label:"foo"}),i=o.checkboxradio("widget"),c=i.find(".ui-icon"),t=i.find(".ui-checkboxradio-icon-space");e.strictEqual(o.checkboxradio("option","label"),"foo","When value is passed on create value is used for option"),e.strictEqual(a.trim(i.text()),"foo","When value is passed on create value is used in dom"),e.strictEqual(c.length,1,"Icon is preserved when label is set on init when wrapped in label"),e.strictEqual(t.length,1,"Icon space is preserved when label is set on init when wrapped in label"),e.strictEqual(a("#checkbox-option-label").length,1,"Element is preserved when label is set on init when wrapped in label")}),e.test("label - explicit null value",function(e){var o,i=a("#checkbox-option-label");e.expect(2),i.checkboxradio({label:null}),o=i.checkboxradio("widget"),e.strictEqual(i.checkboxradio("option","label"),"checkbox label","When null is passed on create text from dom is used for option"),e.strictEqual(a.trim(o.text()),"checkbox label","When null is passed on create text from dom is used in dom")}),e.test("label",function(e){e.expect(4);var o,i=a("#checkbox-option-label");i.checkboxradio(),o=i.checkboxradio("widget"),i.checkboxradio("option","label","bar"),e.strictEqual(i.checkboxradio("option","label"),"bar","When value is passed value is used for option"),e.strictEqual(a.trim(o.text()),"bar","When value is passed value is used in dom"),i.checkboxradio("option","label",null),e.strictEqual(i.checkboxradio("option","label"),"bar","When null is passed text from dom is used for option"),e.strictEqual(a.trim(o.text()),"bar","When null is passed text from dom is used in dom")})});
//# sourceMappingURL=/sm/ec2ca3da670167f4ebb8d644ce79575a39942b2d7b9aeb010e885d3b01b19111.map