/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/droppable/options.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/droppable"],function(t,f){t.module("droppable: options"),t.test("{ addClasses: true }, default",function(t){t.expect(1);var o=f("<div />").droppable({addClasses:!0});t.hasClasses(o,"ui-droppable"),o.droppable("destroy")}),t.test("{ addClasses: false }",function(t){t.expect(1);var o=f("<div />").droppable({addClasses:!1});t.lacksClasses(o,"ui-droppable"),o.droppable("destroy")}),t.test("scope",function(t){t.expect(4);var o,e,a,i,p,r=f("<div />").appendTo("#qunit-fixture").draggable({revert:"invalid"}),d=f("<div />").appendTo("#qunit-fixture").droppable(),n=f("<div />").appendTo("#qunit-fixture").droppable(),s="test";r.draggable("option","scope",s),n.droppable("option","scope",s),o=n.offset(),e=r.offset(),i=o.left-e.left,p=o.top-e.top,r.simulate("drag",{dx:i,dy:p}),e=r.offset(),t.equal(e.left,o.left),t.equal(e.top,o.top),e=d.offset(),i=o.left-e.left,p=o.top-e.top,a=e,d.simulate("drag",{dx:i,dy:p}),e=d.offset(),t.equal(e.left,a.left),t.equal(e.top,a.top)}),t.test("tolerance, intersect",function(o){o.expect(2);var e,a;e=f("<div />").appendTo("#qunit-fixture").css({width:10,height:10,position:"absolute",marginTop:3,marginLeft:3}).draggable(),a=f("<div />").appendTo("#qunit-fixture").css({width:10,height:10,position:"absolute",top:13,left:13}).droppable({tolerance:"intersect"}),f.each([[0,0,!1,"too far up and left"],[6,0,!1,"too far up"],[0,6,!1,"too far left"],[6,6,!0,"top left corner"],[14,14,!0,"bottom right corner"],[15,6,!1,"too far right"],[6,15,!1,"too far down"],[15,15,!1,"too far down and right"]],function(){var t=this;e.css({top:0,left:0}),a.off("drop").on("drop",function(){o.equal(!0,t[2],t[3])}),f(e).simulate("drag",{dx:t[0],dy:t[1]})})}),t.test("tolerance, pointer",function(o){o.expect(3);var e,a;e=f("<div />").appendTo("#qunit-fixture").css({width:10,height:10,position:"absolute"}).draggable(),a=f("<div />").appendTo("#qunit-fixture").css({width:10,height:10,position:"absolute",top:5,left:5}).droppable({tolerance:"pointer"}),f.each([[-1,-1,!1,"too far up and left"],[-1,0,!1,"too far left"],[0,-1,!1,"too far up"],[0,0,!0,"top left corner"],[9,9,!0,"bottom right corner"],[10,9,!1,"too far right"],[9,10,!1,"too far down"],[10,10,!1,"too far down and right"]],function(){var t=this;a.off("drop").on("drop",function(){o.equal(!0,t[2],t[3])}),f(e).simulate("drag",{dx:t[0]-f(e).position().left,dy:t[1]-f(e).position().top})}),e.css({top:0,left:0}).draggable("option","axis","x"),a.css({top:15,left:15}),a.off("drop").on("drop",function(){o.ok(!0,"drop fires as long as pointer is within droppable")}),f(e).simulate("drag",{dx:10,dy:10})})});
//# sourceMappingURL=/sm/1870a04191994deb2211fdf66505c24e5ac26b8bc0308df0bbef43c69c4e676b.map