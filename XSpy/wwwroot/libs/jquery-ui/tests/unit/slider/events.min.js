/**
 * Minified by jsDelivr using UglifyJS v3.4.4.
 * Original file: /npm/jquery-ui@1.12.1/tests/unit/slider/events.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
define(["qunit","jquery","ui/widgets/slider"],function(e,s){e.module("slider: events"),e.test("mouse based interaction",function(i){i.expect(4),s("#slider1").slider({start:function(e){i.equal(e.originalEvent.type,"mousedown","start triggered by mousedown")},slide:function(e){i.equal(e.originalEvent.type,"mousemove","slider triggered by mousemove")},stop:function(e){i.equal(e.originalEvent.type,"mouseup","stop triggered by mouseup")},change:function(e){i.equal(e.originalEvent.type,"mouseup","change triggered by mouseup")}}).find(".ui-slider-handle").eq(0).simulate("drag",{dx:10,dy:10})}),e.test("keyboard based interaction",function(i){i.expect(3),s("#slider1").slider({start:function(e){i.equal(e.originalEvent.type,"keydown","start triggered by keydown")},slide:function(){i.ok(!1,"Slider never triggered by keys")},stop:function(e){i.equal(e.originalEvent.type,"keyup","stop triggered by keyup")},change:function(e){i.equal(e.originalEvent.type,"keyup","change triggered by keyup")}}).find(".ui-slider-handle").eq(0).simulate("keydown",{keyCode:s.ui.keyCode.LEFT}).simulate("keypress",{keyCode:s.ui.keyCode.LEFT}).simulate("keyup",{keyCode:s.ui.keyCode.LEFT})}),e.test("programmatic event triggers",function(e){e.expect(6);s("<div></div>").slider({change:function(){e.ok(!0,"change triggered by value method")}}).slider("value",0);s("<div></div>").slider({values:[10,20],change:function(){e.ok(!0,"change triggered by values method")}}).slider("values",[80,90]),s("<div></div>").slider({change:function(){e.ok(!0,"change triggered by value option")}}).slider("option","value",0),s("<div></div>").slider({values:[10,20],change:function(){e.ok(!0,"change triggered by values option")}}).slider("option","values",[80,90])}),e.test("mouse based interaction part two: when handles overlap",function(d){d.expect(6);var e=s("#slider1").slider({values:[0,0,0],start:function(e,i){d.equal(t.index(i.handle),2,"rightmost handle activated when overlapping at minimum (#3736)")}}),t=e.find(".ui-slider-handle");t.eq(0).simulate("drag",{dx:10}),e.slider("destroy"),(t=(e=s("#slider1").slider({values:[10,10,10],max:10,start:function(e,i){d.equal(t.index(i.handle),0,"leftmost handle activated when overlapping at maximum")}})).find(".ui-slider-handle")).eq(0).simulate("drag",{dx:-10}),e.slider("destroy"),e=s("#slider1").slider({values:[19,20]}),(t=e.find(".ui-slider-handle")).eq(0).simulate("drag",{dx:10}),e.one("slidestart",function(e,i){d.equal(t.index(i.handle),0,"left handle activated if left was moved last")}),t.eq(0).simulate("drag",{dx:10}),e.slider("destroy"),e=s("#slider1").slider({values:[19,20]}),(t=e.find(".ui-slider-handle")).eq(1).simulate("drag",{dx:-10}),e.one("slidestart",function(e,i){d.equal(t.index(i.handle),1,"right handle activated if right was moved last (#3467)")}),t.eq(0).simulate("drag",{dx:10}),e=s("#slider1").slider({range:!0,min:0,max:100,values:[0,50]}),t=e.find(".ui-slider-handle"),e.slider("option",{values:[100,100]}),t.eq(0).simulate("drag",{dx:-10}),d.equal(e.slider("values")[0],99,"setting both values of range slider to the maximum doesn't lock slider"),e.slider("option",{values:[0,0]}),t.eq(1).simulate("drag",{dx:10}),d.equal(e.slider("values")[1],1,"setting both values of range slider to the minimum  doesn't lock slider")}),e.test("event data",function(d){d.expect(6);var e=[8,9,7,4],i=[8,9,7,5],t=s("#slider1").slider({values:e,start:function(e,i){d.deepEqual(i,n,"passing ui to start event")},slide:function(e,i){d.deepEqual(i,l,"passing ui to slide event")},stop:function(e,i){d.deepEqual(i,l,"passing ui to stop event")},change:function(e,i){d.deepEqual(i,l,"passing ui to change event")}}),a=t.find(".ui-slider-handle"),n={handle:a.eq(3)[0],handleIndex:3,values:e,value:e[3]},l=s.extend({},n,{values:i,value:i[3]});a.eq(3).simulate("drag",{dx:10}),t.slider("destroy"),(a=(t=s("#slider1").slider({min:0,max:100,value:1,slide:function(e,i){d.equal(i.value,0,"should pass 0 value if slider reaches it")}})).find(".ui-slider-handle")).eq(0).simulate("drag",{dx:-10}),t.slider("destroy"),(a=(t=s("#slider1").slider({min:0,max:100,values:[1,2],slide:function(e,i){d.equal(i.value,0,"should pass 0 value if one of handles reaches it")}})).find(".ui-slider-handle")).eq(0).simulate("drag",{dx:-10})})});
//# sourceMappingURL=/sm/2feff731901426b95be2123a663f73975b650c4ea599d04901e8e5763f64f1c1.map