/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/toastr@2.1.4/gulpfile.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var gulp=require("gulp"),karma=require("karma").server,merge=require("merge-stream"),plug=require("gulp-load-plugins")(),paths={js:"./toastr.js",less:"./toastr.less",report:"./report",build:"./build"},log=plug.util.log;function analyzejshint(e,t){var s=t||"./.jshintrc";return log("Running JSHint"),gulp.src(e).pipe(plug.jshint(s)).pipe(plug.jshint.reporter("jshint-stylish"))}function analyzejscs(e){return log("Running JSCS"),gulp.src(e).pipe(plug.jscs("./.jscsrc"))}function startTests(e,t){karma.start({configFile:__dirname+"/karma.conf.js",singleRun:!!e},function(){t()})}function bytediffFormatter(e){var t=e.savings>0?" smaller.":" larger.";return e.fileName+" went from "+(e.startSize/1e3).toFixed(2)+" kB to "+(e.endSize/1e3).toFixed(2)+" kB and is "+formatPercent(1-e.percent,2)+"%"+t}function formatPercent(e,t){return(100*e).toFixed(t)}gulp.task("help",plug.taskListing),gulp.task("analyze",function(){log("Analyzing source with JSHint and JSCS");var e=analyzejshint([paths.js]),t=analyzejscs([paths.js]);return merge(e,t)}),gulp.task("js",function(){return log("Bundling, minifying, and copying the app's JavaScript"),gulp.src(paths.js).pipe(plug.sourcemaps.init()).pipe(plug.bytediff.start()).pipe(plug.uglify({})).pipe(plug.bytediff.stop(bytediffFormatter)).pipe(plug.sourcemaps.write(".")).pipe(plug.rename(function(e){".js"===e.extname&&(e.basename+=".min")})).pipe(gulp.dest(paths.build))}),gulp.task("css",function(){return log("Bundling, minifying, and copying the app's CSS"),gulp.src(paths.less).pipe(plug.less()).pipe(gulp.dest(paths.build)).pipe(plug.bytediff.start()).pipe(plug.minifyCss({})).pipe(plug.bytediff.stop(bytediffFormatter)).pipe(plug.rename("toastr.min.css")).pipe(gulp.dest(paths.build))}),gulp.task("default",["js","css"],function(){log("Analyze, Build CSS and JS")}),gulp.task("clean",function(e){log("Cleaning: "+plug.util.colors.blue(paths.report)),log("Cleaning: "+plug.util.colors.blue(paths.build));var t=[paths.build,paths.report];del(t,e)}),gulp.task("test",function(e){startTests(!0,e)});
//# sourceMappingURL=/sm/a9bd111dd71928122e04218ad74be9eb82924529f94d546d6d256f3ac01fb755.map